shef_localpkg_install(){
    echo localinstall prompted...
    chk_pkgcomponent_essential
    test ! -f manifest \
      && { 
        shef_repo_fetchinfo $(get_repo_url)
        shef_create_manifest $(get_repo_url)
      }
    test -f manifest && { . lib/manifest || throw manifest loading error; }
    echo installing @${SHELIB_MODULE_NAME:="$(basename $PWD)"}...;
    setvar module_dir $SHELIB_DIR/${SHELIB_MODULE_NAME}
    silent getvar module_dir
    test -d "$(getvar module_dir)" \
      && { test ! -z "$shef_force_opt" || askyn shelib module @${SHELIB_MODULE_NAME} already exist in $(getvar module_dir), overwrite?;} \
      && remove_modules \
      && install_modules ;
    test ! -d "$(getvar module_dir)" && install_modules;

    echo installing bundled executables...;
    test -d ${SHELIB_DIR}/../bin \
      || throw shelib bindir corrupted, reinstall it \
      && setvar bindir ${SHELIB_DIR}/../bin
    test -d bin && for i in bin/*; do
      if test "$shef_dev_mode" = "1"; then
        ln -s ${shef_verbose_opt} ${shef_force_opt} $PWD/$i $(getvar bindir);
      else
        cp ${shef_verbose_opt} ${shef_force_opt:--i} -a $i $(getvar bindir)
      fi
    done
    echo @${SHELIB_MODULE_NAME:-unknown}-${SHELIB_MODULE_VERSION:-unknown} installed!
}

get_repo_url(){
  git remote get-url $(git remote | head -1)
}
